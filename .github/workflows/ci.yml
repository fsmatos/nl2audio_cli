name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov ruff black isort detect-secrets

    - name: Run code formatting checks
      run: |
        black --check --diff src/ tests/

    - name: Run linting
      run: |
        ruff check src/ tests/

    - name: Run tests
      run: |
        pytest --cov=src --cov-report=xml
      env:
        OPENAI_API_KEY: sk-test1234567890abcdef
        HOME: /home/runner

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

    - name: Scan for secrets
      run: |
        detect-secrets --baseline .secrets.baseline scan
      env:
        DETECT_SECRETS_SCAN_ARGS: --baseline .secrets.baseline

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install detect-secrets
      run: |
        pip install detect-secrets

    - name: Scan for new secrets
      run: |
        detect-secrets --baseline .secrets.baseline scan
      env:
        DETECT_SECRETS_SCAN_ARGS: --baseline .secrets.baseline
